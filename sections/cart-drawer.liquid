<div id="cart-drawer" class="cart-drawer">
  <div class="cart-drawer-content">
    <div class="cart-drawer-overlay"></div>
    <div class="cart-drawer-header">
      <a class="close-cart">{% render 'icon-close' %}</a>
      <span>Your Cart</span>
    </div>

    <hr class="divider">

    <div class="cart-items"></div>
  </div>
  <div class="cart-footer">
    <div class="cart-footer-elements">
      <div class="total">
        <span>Total:</span>
        <span id="cart-total">{{ cart.total_price | money }}</span>
      </div>
      <a href="/checkout" class="checkout-btn">Checkout</a>
    </div>
  </div>

  {% render 'upsells' %}
</div>

<script>
  document.addEventListener('DOMContentLoaded', function () {
    const cartDrawer = document.getElementById('cart-drawer');
    const cartIcon = document.getElementById('cart-icon');
    const overlay = document.querySelector('.cart-drawer-overlay');
    const closeCartBtn = document.querySelector('.close-cart');

    cartIcon.addEventListener('click', function () {
      fetch('/cart.js')
        .then((res) => res.json())
        .then((cart) => {
          renderCart(cart);
          cartDrawer.classList.add('active');
          overlay.classList.add('active');
        });
    });

    overlay.addEventListener('click', closeCart);
    closeCartBtn.addEventListener('click', closeCart);

    document.addEventListener('click', function (event) {
      if (
        cartDrawer.classList.contains('active') &&
        !cartDrawer.contains(event.target) &&
        !cartIcon.contains(event.target)
      ) {
        closeCart();
      }
    });

    function closeCart() {
      cartDrawer.classList.remove('active');
      overlay.classList.remove('active');
    }

    window.renderCart = function renderCart(cart) {
      const cartItemsContainer = document.querySelector('.cart-items');
      cartItemsContainer.innerHTML = '';

      cart.items.forEach((item) => {
        const itemHTML = `
          <div class="cart-item" data-variant-id="${item.variant_id}$" data-key="${item.key}">
          <div class="item-image">
            <img src="${item.image}" alt="${item.product_title}">
          </div>
          <div class="item-details">
            <div class="item-title">${item.product_title}</div>
            <div class="item-variant">${item.variant_title}</div>
            <div class="item-price">${formatMoneyWithoutTrailingZeros(item.line_price)}</div>
          </div>
          <div class="item-qty">
            <button class="qty-btn" data-change="-1">‹</button>
            <span class="item-quantity">${item.quantity}</span>
            <button class="qty-btn" data-change="1">›</button>
          </div>
          <a class="remove-item">{% render 'icon-close' %}</a>
        </div>
        `;
        cartItemsContainer.insertAdjacentHTML('beforeend', itemHTML);
      });

      document.getElementById('cart-total').textContent = (cart.total_price / 100).toFixed(2);

      bindCartItemEvents();
    };

    function formatMoneyWithoutTrailingZeros(cents, format) {
      format = format || window.ShopifyCurrencyFormat || '${{amount}}';

      if (!format.includes('{{amount}}')) {
        return cents;
      }
      let amount = (cents / 100).toFixed(2);

      amount = amount.replace(/\.00$/, '');
      amount = amount.replace(/(\.\d)0$/, '$1');

      format = format.replace('\{\{amount}}', amount);
      return format;
    }

    function bindCartItemEvents() {
      document.querySelectorAll('.qty-btn').forEach((button) => {
        button.addEventListener('click', function () {
          const itemEl = this.closest('.cart-item');
          const variantId = parseInt(itemEl.dataset.variantId);
          const change = parseInt(this.dataset.change);

          fetch('/cart.js')
            .then((res) => res.json())
            .then((cart) => {
              const item = cart.items.find((i) => i.variant_id === variantId);
              if (!item) return;

              const newQty = item.quantity + change;

              fetch('/cart/change.js', {
                method: 'POST',
                headers: {
                  'Content-Type': 'application/json',
                  Accept: 'application/json',
                },
                body: JSON.stringify({
                  id: item.key,
                  quantity: newQty,
                }),
              })
                .then((res) => res.json())
                .then((updatedCart) => renderCart(updatedCart));
            });
        });
      });

      document.querySelectorAll('.remove-item').forEach((button) => {
        button.addEventListener('click', function () {
          const itemEl = this.closest('.cart-item');
          const variantId = parseInt(itemEl.dataset.variantId);

          fetch('/cart.js')
            .then((res) => res.json())
            .then((cart) => {
              const item = cart.items.find((i) => i.variant_id === variantId);
              if (!item) return;

              fetch('/cart/change.js', {
                method: 'POST',
                headers: {
                  'Content-Type': 'application/json',
                  Accept: 'application/json',
                },
                body: JSON.stringify({
                  id: item.key,
                  quantity: 0,
                }),
              })
                .then((res) => res.json())
                .then((updatedCart) => renderCart(updatedCart));
            });
        });
      });
    }
  });
</script>
