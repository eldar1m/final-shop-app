<div class="variant-overlay" id="variant-overlay-{{ product.id }}">
  <div class="variant-overlay-content">
    <button class="close-variant-overlay">{% render 'icon-close' %}</button>

    <div class="variant-overlay-items">
      <div class="variant-overlay-image">
        <img src="{{ product.featured_image | img_url: 'compact' }}" alt="{{ product.title }}">
      </div>
      <form class="variant-form" data-product-id="{{ product.id }}">
        {% for variant in product.variants %}
          <label class="size-option size-option-overlay">
            <input
              type="radio"
              name="id"
              value="{{ variant.id }}"
              {% if forloop.first %}
                checked
              {% endif %}
              {% unless variant.available %}
                disabled
              {% endunless %}
            >
            <span>{{ variant.title }}</span>
          </label>
        {% endfor %}
        <input type="hidden" name="quantity" value="1">
        <input type="hidden" name="properties[_unique]" value="{{ 'now' | date: '%s' }}">
        <button type="submit" class="variant-overlay-add-to-cart">Add to Cart</button>
      </form>
    </div>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function () {
    // Open overlay
    document.querySelectorAll('.open-variant-overlay').forEach((button) => {
      button.addEventListener('click', () => {
        const overlay = document.getElementById(`variant-overlay-${button.dataset.productId}`);
        if (overlay) overlay.classList.add('active');
      });
    });

    // Close overlay on icon or outside
    document.querySelectorAll('.variant-overlay').forEach((overlay) => {
      const closeBtn = overlay.querySelector('.close-variant-overlay');
      const content = overlay.querySelector('.variant-overlay-content');

      closeBtn.addEventListener('click', () => overlay.classList.remove('active'));

      overlay.addEventListener('click', (e) => {
        if (!content.contains(e.target)) {
          overlay.classList.remove('active');
        }
      });
    });

    // Add to cart + open cart drawer
    document.querySelectorAll('.variant-form').forEach((form) => {
      form.addEventListener('submit', function (e) {
        console.log('added');
        e.preventDefault();
        const formData = new FormData(form);
        fetch('/cart/add.js', {
          method: 'POST',
          body: formData,
          headers: { Accept: 'application/json' },
        })
          .then((res) => res.json())
          .then((data) => {
            const overlay = form.closest('.variant-overlay');
            if (overlay) overlay.classList.remove('active');
            fetch('/cart.js')
              .then((res) => res.json())
              .then((cart) => {
                if (typeof renderCart === 'function') {
                  renderCart(cart);
                }
                document.getElementById('cart-drawer').classList.add('active');
                document.querySelector('.cart-drawer-overlay')?.classList.add('active');
              });
          });
      });
    });
  });
</script>
